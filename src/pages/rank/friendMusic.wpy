<!--  -->
<template>
  <view class='container'>
    <image src="/assets/lead_head_point_l.png" mode="aspectFill" lazy-load="true" class="head_l"></image>
      <image src="/assets/lead_head_point_r.png" mode="aspectFill" lazy-load="true" class="head_r"></image>
    <nav :navH.sync='navH' :title.sync='title' style="height:{{navH + 90}}rpx"></nav>
    <view style="margin-top:{{navH + 90}}rpx;" class="box">
      <image src="/assets/lead_head_timer.png" mode="aspectFill" lazy-load="true" class="count_down">
        <view class='countdown'>
          <view>{{ day }}</view>
          <view>{{ hour }}</view>
          <view>{{ minute }}</view>
          <view>{{ second }}</view>
        </view>
      </image>
      
    </view>
     <view class='tips'>本期挑战成功后，会自动进入票选阶段</view>
    <view class="rank_box">
        <rank :rankingLists.sync='rankingLists'></rank>
      </view>
      <view class='empty_container' wx:if='{{rankingLists <=0 }}'>
        <image class='empty_icon' src='../../assets/empty.png' />
        <view class='empty_title'>你的好友本周还没有领唱哦</view>
      </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import rankingList from '@/components/rankingList'
  import api from '@/api/api'
  import PaginationModel from '@/models/paginationModel'
  import nav from '@/components/nav'

  const pageMode = new PaginationModel()
  export default class leadingSinger extends wepy.page {
    config = {
      navigationBarTitleText: '',
      enablePullDownRefresh: true
    };
    data = {
      day: '00',
      hour: '00',
      minute: '00',
      second: '00',
      title: '正在票选下周领唱',
      navH: '',
      rankingLists: [],
      pageNo: 1,
      isMore: true,
      date: ''
    };
    components = {
      rank: rankingList,
      nav

    };
    methods = {
  
    };
    events = {
      back2TopPage() {
        wepy.navigateBack({
          delta: 1
        })
      }
    };
    watch = {};
    computed = {};
    async fetchData() {
      this.date = null
      let res = null
      res = await pageMode.pullToRefresh(api.myFriendChanllege)
      this.date = res.time
      this.countDown(this.date)
      wepy.stopPullDownRefresh()
      if (res.code === 0) {
        this.rankingLists = []
        if (res.challengeList) {
          /*
          let newRes = res.challengeList
          newRes.forEach(element => {
            element.isPlay = true
          })
          */
          this.rankingLists = this.rankingLists.concat(res.challengeList)
        }
      }
      this.$apply()
    };
    async fecthMoreData() {
      this.pageNo++
      let res = null
      res = await pageMode.more(api.myFriendChanllege)
      if (res.code === 0) {
        if (!pageMode.checkLoadMore(res.challengeList)) {
          this.isMore = false
        }
        if (res.challengeList.length > 0) {
          this.rankingLists = this.rankingLists.concat(res.challengeList)
        }
      }

      this.$apply()
    };
    countDown(times) {
      this.timer = null
      let _this = this
      this.timer = setInterval(function() {
        // 时间默认值
        let day = 0
        let hour = 0
        let minute = 0
        let second = 0
        if (times > 0) {
          day = Math.floor(times / (60 * 60 * 24))
          hour = Math.floor(times / (60 * 60)) - (day * 24)
          minute = Math.floor(times / 60) - (day * 24 * 60) - (hour * 60)
          second = Math.floor(times) - (day * 24 * 60 * 60) - (hour * 60 * 60) - (minute * 60)
        }
        if (day <= 9) { _this.day = '0' + day } else { _this.day = day }
        if (hour <= 9) { _this.hour = '0' + hour } else { _this.hour = hour }
        if (minute <= 9) { _this.minute = '0' + minute } else { _this.minute = minute }
        if (second <= 9) { _this.second = '0' + second } else { _this.second = second }
        times--
        _this.$apply()
      }, 1000)
      if (times <= 0) {
        this.fetchData()
        clearInterval(this.timer)
      }
    };
    onPullDownRefresh = async() => {
      this.fetchData()
    };
    onReachBottom = async() => {
      if (this.isMore) {
        this.fecthMoreData()
      }
    };
    async onLoad() {
      this.navH = this.$parent.globalData.navHeight
      await wx.showLoading({
        title: '加载中...'
      })
      await this.fetchData()
      await wx.hideLoading()
    };
    onShow() {};
    onUnload() {
      this.date = null
      clearInterval(this.timer)
    }
}
</script>

<style lang='less' scoped>
  .container {
    background: #000;
    min-height: 100vh;
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
  }
  .box {
    position: relative;
    width: 100%;

    margin: 0 auto;
  }
  .count_down {
    height: 214rpx;
    width: 612rpx;
    margin-left: 68rpx;
    position: relative;
  }
  .countdown{
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    color: #000000;
    position: absolute;
    height: 66rpx;
    width: 400rpx;
    top:42rpx;
    left: 103rpx;
    // font-family: DINCondensed-Bold;
    font-size: 60rpx;
    color: #303030;
  }
  .countdown>view:not(:first-child){
    margin-left: 39rpx;
  }
.countdown>view{
  width: 80rpx;
  text-align: center;
  height:66rpx;
  line-height: 66rpx;
}
.head_l{
  width: 264rpx;
  height: 574rpx;
  position: fixed;
  left: 0;
}
.head_r{
  width: 264rpx;
  height: 574rpx;
  position: fixed;
  right: 0;
  top: 108rpx;
}
.music_top_tips{
  position:absolute;
  font-family:PingFangSC-Semibold;
  font-size:34rpx;
  color:#FFFFFF;
  top:64rpx;
  left:32rpx;
}
.box_bottom{
  position: fixed;
  bottom: 0;
  left: 0;
  height: 118rpx;
  width: 100%;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  justify-content: center;
  align-items: center;
}
.box_bottom>view{
  width: 670rpx;
  height: 88rpx;
  background: #FFDC51;
  border-radius: 48rpx;
  font-family: PingFangSC-Medium;
  font-size: 32rpx;
  color: #303030;
  letter-spacing: 0;
  text-align: center;
  line-height: 88rpx;
}
.rank_box {
    padding: 0 40rpx 118rpx 40rpx;
    position: relative;
    z-index: 10;
  
}
.tips {
    color: #fff;
    text-align: center;
    font-family: PingFangSC-Medium;
    font-size: 28rpx;
    margin-bottom:28rpx; 
  }
  .empty_container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    margin-top:100rpx;

    .empty_icon {
      width: 172rpx;
      height: 166rpx;
    } 
    .empty_title {
      font-family: PingFangSC-Regular;
      font-size: 28rpx;
      color: #8A8A8A;
      margin-top:36rpx
      }
  }
</style>
